// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  description String
  products  Product[]
  createdAt DateTime @default(now())
}

model Product {
  id            String   @id @default(cuid())
  name          String
  description   String
  price         Float
  crossedPrice  Float
  stock         Int
  status        String   // 'Published' | 'Draft'
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id])
  orderItems    OrderItem[]
  images        String[] // Image URLs
  specifications Json     // Array of { key: string, value: string }
  variants       Json     // Array of { name: string, values: string[] }
  createdAt     DateTime @default(now())
}

model Order {
  id            String     @id @default(cuid())
  createdAt     DateTime   @default(now())
  totalPrice    Float
  items         OrderItem[]
  customerEmail String
  customerName  String
  address       String
  phone         String
  status        OrderStatus
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   // hashed password
  createdAt DateTime @default(now())
  resetTokens PasswordResetToken[]
}

model PasswordResetToken {
  id          String   @id @default(cuid())
  adminUser   AdminUser @relation(fields: [adminUserId], references: [id])
  adminUserId String
  token       String   @unique
  expiresAt   DateTime
  createdAt   DateTime @default(now())
}


enum ProductStatus {
  Published
  Draft
}

enum OrderStatus {
  Pending
  Paid
  Shipped
  Cancelled
}
